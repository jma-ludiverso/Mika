@using Microsoft.AspNetCore.Identity
@using MikaWeb.Areas.Identity.Data

@inject SignInManager<MikaWebUser> SignInManager
@inject UserManager<MikaWebUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                @if ((await UserManager.GetUserAsync(User)).IsAdmin)
                {
                    <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @UserManager.GetUserName(User)!</a>
                }
                else
                {
                    <a id="manage" class="nav-link text-dark" title="Manage">Hola @UserManager.GetUserName(User)!</a>
                }
            </li>
            <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
